{
  "name": "kpt-app",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "cli": "ts-node src/cli/cli.ts",
    "cli:build": "tsc src/cli/cli.ts --outDir dist/cli && node dist/cli/cli.js",
    "cli:create-admin": "ts-node src/cli/cli.ts create-admin",
    "cli:remove-admin": "ts-node src/cli/cli.ts remove-admin",
    "cli:list-admins": "ts-node src/cli/cli.ts list-admins",
    "docker:dev": "docker-compose -f .deploy/docker-compose.dev.yml --env-file .deploy/env.dev up -d",
    "docker:dev:build": "docker-compose -f .deploy/docker-compose.dev.yml --env-file .deploy/env.dev up -d --build",
    "docker:dev:down": "docker-compose -f .deploy/docker-compose.dev.yml --env-file .deploy/env.dev down",
    "docker:dev:logs": "docker-compose -f .deploy/docker-compose.dev.yml --env-file .deploy/env.dev logs -f",
    "docker:stg": "docker-compose -f .deploy/docker-compose.stg.yml --env-file .deploy/env.stg up -d",
    "docker:stg:build": "docker-compose -f .deploy/docker-compose.stg.yml --env-file .deploy/env.stg up -d --build",
    "docker:stg:down": "docker-compose -f .deploy/docker-compose.stg.yml --env-file .deploy/env.stg down",
    "docker:stg:logs": "docker-compose -f .deploy/docker-compose.stg.yml --env-file .deploy/env.stg logs -f",
    "docker:build": "docker build -f .deploy/Dockerfile -t kpt-app:latest .",
    "docker:build:dev": "docker build -f .deploy/Dockerfile.dev -t kpt-app:dev .",
    "docker:clean": "docker system prune -f && docker volume prune -f",
    "docker:clean:all": "docker system prune -a -f && docker volume prune -f"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/bull": "^11.0.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.0",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "bcrypt": "^5.1.1",
    "bull": "^4.12.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "firebase-admin": "^12.0.0",
    "googleapis": "^158.0.0",
    "mysql2": "^3.6.5",
    "nest-commander": "^3.19.0",
    "nestjs-paginate": "^12.7.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.17",
    "typeorm-transactional": "^0.5.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/passport-google-oauth20": "^2.0.14",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
