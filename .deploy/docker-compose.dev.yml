version: '3.8'

services:
  api:
    build:
      context: ../
      dockerfile: .deploy/Dockerfile.dev
    container_name: kpt-api-dev
    restart: unless-stopped
    ports:
      - "${API_PORT}:3000"
    volumes:
      - ..:/app
      - /app/node_modules
    depends_on:
      - mysql
      # - minio
      - redis
    networks:
      - kpt-network
    env_file:
      - env.dev

  mysql:
    image: mysql:8.0
    container_name: kpt-mysql-dev
    restart: unless-stopped
    ports:
      - "3307:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - kpt-network
    env_file:
      - env.dev

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: kpt-phpmyadmin-dev
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - kpt-network
    env_file:
      - env.dev

  # minio:
  #   image: minio/minio:latest
  #   container_name: kpt-minio-dev
  #   restart: unless-stopped
  #   ports:
  #     - "9002:9000"
  #     - "9003:9001"
  #   volumes:
  #     - minio_data_dev:/data
  #   command: server /data --console-address ":9001"
  #   networks:
  #     - kpt-network
  #   env_file:
  #     - env.dev

  redis:
    image: redis:7-alpine
    container_name: kpt-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - kpt-network
    env_file:
      - env.dev

volumes:
  mysql_data_dev:
    driver: local
  minio_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  kpt-network:
    driver: bridge
