version: '3.8'

services:
  api:
    build:
      context: ../
      dockerfile: .deploy/Dockerfile
    container_name: kpt-api-stg
    restart: unless-stopped
    ports:
      - "${API_PORT}:3000"
    depends_on:
      - mysql
      - minio
      - redis
    networks:
      - kpt-network
    env_file:
      - env.stg

  mysql:
    image: mysql:8.0
    container_name: kpt-mysql-stg
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data_stg:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - kpt-network
    env_file:
      - env.stg

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: kpt-phpmyadmin-stg
    restart: unless-stopped
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      - mysql
    networks:
      - kpt-network
    env_file:
      - env.stg

  minio:
    image: minio/minio:latest
    container_name: kpt-minio-stg
    restart: unless-stopped
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio_data_stg:/data
    command: server /data --console-address ":9001"
    networks:
      - kpt-network
    env_file:
      - env.stg

  redis:
    image: redis:7-alpine
    container_name: kpt-redis-stg
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data_stg:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - kpt-network
    env_file:
      - env.stg

volumes:
  mysql_data_stg:
    driver: local
  minio_data_stg:
    driver: local
  redis_data_stg:
    driver: local

networks:
  kpt-network:
    driver: bridge
