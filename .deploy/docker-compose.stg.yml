version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: kpt-traefik-stg
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/dynamic:/dynamic:ro
      - ./traefik/acme.json:/data/acme.json
    networks:
      - kpt-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"

  api:
    build:
      context: ../
      dockerfile: .deploy/Dockerfile
    container_name: kpt-api-stg
    restart: unless-stopped
    depends_on:
      - mysql
      - minio
      - redis
    networks:
      - kpt-network
    env_file:
      - env.stg
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.http.routers.api.middlewares=cors,security,rate-limit"

  mysql:
    image: mysql:8.0
    container_name: kpt-mysql-stg
    restart: unless-stopped
    volumes:
      - mysql_data_stg:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - kpt-network
    env_file:
      - env.stg

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: kpt-phpmyadmin-stg
    restart: unless-stopped
    depends_on:
      - mysql
    networks:
      - kpt-network
    env_file:
      - env.stg
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin.rule=Host(`${PHPMYADMIN_DOMAIN}`)"
      - "traefik.http.routers.phpmyadmin.entrypoints=web"
      - "traefik.http.services.phpmyadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.phpmyadmin.middlewares=security"

  minio:
    image: minio/minio:latest
    container_name: kpt-minio-stg
    restart: unless-stopped
    volumes:
      - minio_data_stg:/data
    command: server /data --console-address ":9001"
    networks:
      - kpt-network
    env_file:
      - env.stg
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`${MINIO_DOMAIN}`)"
      - "traefik.http.routers.minio.entrypoints=web"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.middlewares=security"
      - "traefik.http.routers.minio-console.rule=Host(`${MINIO_CONSOLE_DOMAIN}`)"
      - "traefik.http.routers.minio-console.entrypoints=web"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-console.middlewares=security"

  redis:
    image: redis:7-alpine
    container_name: kpt-redis-stg
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data_stg:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - kpt-network
    env_file:
      - env.stg

volumes:
  mysql_data_stg:
    driver: local
  minio_data_stg:
    driver: local
  redis_data_stg:
    driver: local

networks:
  kpt-network:
    driver: bridge
